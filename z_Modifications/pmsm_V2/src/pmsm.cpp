// PSC | Power Smart Control | JRF | 2018

#include "pmsm.h"



//this function calculates the sin or cosine of an angle in radians
//flag =0 => sine   ||   flag=1 => cosine
AP_18_2 calc_sin_cos_a (
		AP_21_11 theta_aux, bool flag){


	//look up table of a unity sin function between 0º && 90º (radians) with 512 or 1024 points. sin_func[alpha*(512/90)]
	//sin(pi)=0.5  ==> sin[round(pi*512/(pi/2))]
	//cos(alpha) = sin[(pi/2-alpha)*(512/pi/2)]

	//	0<=alpha<90 => 		sin[apha]-> sin[alpha]
	//	90<=alpha<180 => 	sin[apha]-> sin[180-alpha]
	//	180<=alpha<270 => 	sin[apha]-> -sin[alpha-180]
	//	270<=alpha<360 => 	sin[apha]-> -sin[360-alpha]

	//low precision ->512 points in 90 deg
	//const data_typ sin_func[512] = { 0.000000f, 0.003068f, 0.006136f, 0.009204f, 0.012272f, 0.015339f, 0.018407f, 0.021474f, 0.024541f, 0.027608f, 0.030675f, 0.033741f, 0.036807f, 0.039873f, 0.042938f, 0.046003f, 0.049068f, 0.052132f, 0.055195f, 0.058258f, 0.061321f, 0.064383f, 0.067444f, 0.070505f, 0.073565f, 0.076624f, 0.079682f, 0.082740f, 0.085797f, 0.088854f, 0.091909f, 0.094963f, 0.098017f, 0.101070f, 0.104122f, 0.107172f, 0.110222f, 0.113271f, 0.116319f, 0.119365f, 0.122411f, 0.125455f, 0.128498f, 0.131540f, 0.134581f, 0.137620f, 0.140658f, 0.143695f, 0.146730f, 0.149765f, 0.152797f, 0.155828f, 0.158858f, 0.161886f, 0.164913f, 0.167938f, 0.170962f, 0.173984f, 0.177004f, 0.180023f, 0.183040f, 0.186055f, 0.189069f, 0.192080f, 0.195090f, 0.198098f, 0.201105f, 0.204109f, 0.207111f, 0.210112f, 0.213110f, 0.216107f, 0.219101f, 0.222094f, 0.225084f, 0.228072f, 0.231058f, 0.234042f, 0.237024f, 0.240003f, 0.242980f, 0.245955f, 0.248928f, 0.251898f, 0.254866f, 0.257831f, 0.260794f, 0.263755f, 0.266713f, 0.269668f, 0.272621f, 0.275572f, 0.278520f, 0.281465f, 0.284407f, 0.287347f, 0.290285f, 0.293219f, 0.296151f, 0.299080f, 0.302006f, 0.304929f, 0.307850f, 0.310767f, 0.313682f, 0.316593f, 0.319502f, 0.322408f, 0.325310f, 0.328210f, 0.331106f, 0.334000f, 0.336890f, 0.339777f, 0.342661f, 0.345541f, 0.348419f, 0.351293f, 0.354163f, 0.357031f, 0.359895f, 0.362756f, 0.365613f, 0.368467f, 0.371317f, 0.374164f, 0.377007f, 0.379847f, 0.382683f, 0.385516f, 0.388345f, 0.391170f, 0.393992f, 0.396810f, 0.399624f, 0.402435f, 0.405241f, 0.408044f, 0.410843f, 0.413638f, 0.416429f, 0.419217f, 0.422000f, 0.424780f, 0.427555f, 0.430326f, 0.433094f, 0.435857f, 0.438616f, 0.441371f, 0.444122f, 0.446869f, 0.449611f, 0.452350f, 0.455084f, 0.457813f, 0.460539f, 0.463260f, 0.465976f, 0.468689f, 0.471397f, 0.474100f, 0.476799f, 0.479494f, 0.482184f, 0.484869f, 0.487550f, 0.490226f, 0.492898f, 0.495565f, 0.498228f, 0.500885f, 0.503538f, 0.506187f, 0.508830f, 0.511469f, 0.514103f, 0.516732f, 0.519356f, 0.521975f, 0.524590f, 0.527199f, 0.529804f, 0.532403f, 0.534998f, 0.537587f, 0.540171f, 0.542751f, 0.545325f, 0.547894f, 0.550458f, 0.553017f, 0.555570f, 0.558118f, 0.560661f, 0.563199f, 0.565732f, 0.568259f, 0.570781f, 0.573297f, 0.575808f, 0.578314f, 0.580814f, 0.583309f, 0.585798f, 0.588281f, 0.590760f, 0.593232f, 0.595699f, 0.598161f, 0.600616f, 0.603067f, 0.605511f, 0.607950f, 0.610383f, 0.612810f, 0.615231f, 0.617647f, 0.620057f, 0.622461f, 0.624859f, 0.627252f, 0.629638f, 0.632019f, 0.634393f, 0.636762f, 0.639124f, 0.641481f, 0.643831f, 0.646176f, 0.648514f, 0.650847f, 0.653173f, 0.655493f, 0.657807f, 0.660114f, 0.662416f, 0.664711f, 0.667000f, 0.669282f, 0.671559f, 0.673829f, 0.676093f, 0.678350f, 0.680601f, 0.682845f, 0.685084f, 0.687315f, 0.689540f, 0.691759f, 0.693971f, 0.696177f, 0.698376f, 0.700569f, 0.702755f, 0.704934f, 0.707107f, 0.709273f, 0.711432f, 0.713585f, 0.715731f, 0.717870f, 0.720002f, 0.722128f, 0.724247f, 0.726359f, 0.728464f, 0.730563f, 0.732654f, 0.734739f, 0.736816f, 0.738887f, 0.740951f, 0.743008f, 0.745058f, 0.747101f, 0.749136f, 0.751165f, 0.753187f, 0.755201f, 0.757209f, 0.759209f, 0.761202f, 0.763188f, 0.765167f, 0.767139f, 0.769103f, 0.771060f, 0.773010f, 0.774953f, 0.776888f, 0.778816f, 0.780737f, 0.782650f, 0.784556f, 0.786455f, 0.788346f, 0.790230f, 0.792106f, 0.793975f, 0.795837f, 0.797691f, 0.799537f, 0.801376f, 0.803207f, 0.805031f, 0.806847f, 0.808656f, 0.810457f, 0.812250f, 0.814036f, 0.815814f, 0.817585f, 0.819347f, 0.821102f, 0.822850f, 0.824589f, 0.826321f, 0.828045f, 0.829761f, 0.831470f, 0.833170f, 0.834863f, 0.836548f, 0.838225f, 0.839894f, 0.841555f, 0.843208f, 0.844853f, 0.846491f, 0.848120f, 0.849742f, 0.851355f, 0.852961f, 0.854558f, 0.856147f, 0.857729f, 0.859302f, 0.860867f, 0.862424f, 0.863973f, 0.865514f, 0.867046f, 0.868571f, 0.870087f, 0.871595f, 0.873095f, 0.874587f, 0.876070f, 0.877545f, 0.879012f, 0.880471f, 0.881921f, 0.883363f, 0.884797f, 0.886222f, 0.887640f, 0.889048f, 0.890449f, 0.891841f, 0.893224f, 0.894599f, 0.895966f, 0.897324f, 0.898674f, 0.900016f, 0.901349f, 0.902673f, 0.903989f, 0.905297f, 0.906596f, 0.907886f, 0.909168f, 0.910441f, 0.911706f, 0.912962f, 0.914210f, 0.915449f, 0.916679f, 0.917901f, 0.919114f, 0.920318f, 0.921514f, 0.922701f, 0.923879f, 0.925049f, 0.926210f, 0.927362f, 0.928506f, 0.929641f, 0.930767f, 0.931884f, 0.932993f, 0.934092f, 0.935183f, 0.936266f, 0.937339f, 0.938403f, 0.939459f, 0.940506f, 0.941544f, 0.942573f, 0.943593f, 0.944605f, 0.945607f, 0.946601f, 0.947586f, 0.948561f, 0.949528f, 0.950486f, 0.951435f, 0.952375f, 0.953306f, 0.954228f, 0.955141f, 0.956045f, 0.956940f, 0.957826f, 0.958703f, 0.959571f, 0.960430f, 0.961280f, 0.962121f, 0.962953f, 0.963776f, 0.964590f, 0.965394f, 0.966190f, 0.966976f, 0.967754f, 0.968522f, 0.969281f, 0.970031f, 0.970772f, 0.971504f, 0.972226f, 0.972940f, 0.973644f, 0.974339f, 0.975025f, 0.975702f, 0.976370f, 0.977028f, 0.977677f, 0.978317f, 0.978948f, 0.979570f, 0.980182f, 0.980785f, 0.981379f, 0.981964f, 0.982539f, 0.983105f, 0.983662f, 0.984210f, 0.984748f, 0.985278f, 0.985797f, 0.986308f, 0.986809f, 0.987301f, 0.987784f, 0.988258f, 0.988722f, 0.989176f, 0.989622f, 0.990058f, 0.990485f, 0.990903f, 0.991311f, 0.991710f, 0.992099f, 0.992480f, 0.992850f, 0.993212f, 0.993564f, 0.993907f, 0.994240f, 0.994565f, 0.994879f, 0.995185f, 0.995481f, 0.995767f, 0.996045f, 0.996313f, 0.996571f, 0.996820f, 0.997060f, 0.997290f, 0.997511f, 0.997723f, 0.997925f, 0.998118f, 0.998302f, 0.998476f, 0.998640f, 0.998795f, 0.998941f, 0.999078f, 0.999205f, 0.999322f, 0.999431f, 0.999529f, 0.999619f, 0.999699f, 0.999769f, 0.999831f, 0.999882f, 0.999925f, 0.999958f, 0.999981f, 0.999995};
	//better precision ->1024 points in 90 deg
	const AP_18_2 sin_func[1024] = { 0.0 , 0.0015339 , 0.003067957 , 0.004601926 , 0.006135885 , 0.007669829 , 0.009203755 , 0.010737659 , 0.012271538 , 0.013805389 , 0.015339206 , 0.016872988 , 0.01840673 , 0.019940429 , 0.02147408 , 0.023007681 , 0.024541229 , 0.026074718 , 0.027608146 , 0.029141509 , 0.030674803 , 0.032208025 , 0.033741172 , 0.035274239 , 0.036807223 , 0.03834012 , 0.039872928 , 0.041405641 , 0.042938257 , 0.044470772 , 0.046003182 , 0.047535484 , 0.049067674 , 0.050599749 , 0.052131705 , 0.053663538 , 0.055195244 , 0.056726821 , 0.058258265 , 0.059789571 , 0.061320736 , 0.062851758 , 0.064382631 , 0.065913353 , 0.06744392 , 0.068974328 , 0.070504573 , 0.072034653 , 0.073564564 , 0.075094301 , 0.076623861 , 0.078153242 , 0.079682438 , 0.081211447 , 0.082740265 , 0.084268888 , 0.085797312 , 0.087325535 , 0.088853553 , 0.090381361 , 0.091908956 , 0.093436336 , 0.094963495 , 0.096490431 , 0.09801714 , 0.099543619 , 0.101069863 , 0.102595869 , 0.104121634 , 0.105647154 , 0.107172425 , 0.108697444 , 0.110222207 , 0.111746711 , 0.113270952 , 0.114794927 , 0.116318631 , 0.117842062 , 0.119365215 , 0.120888087 , 0.122410675 , 0.123932975 , 0.125454983 , 0.126976696 , 0.128498111 , 0.130019223 , 0.131540029 , 0.133060525 , 0.134580709 , 0.136100575 , 0.137620122 , 0.139139344 , 0.140658239 , 0.142176804 , 0.143695033 , 0.145212925 , 0.146730474 , 0.148247679 , 0.149764535 , 0.151281038 , 0.152797185 , 0.154312973 , 0.155828398 , 0.157343456 , 0.158858143 , 0.160372457 , 0.161886394 , 0.163399949 , 0.16491312 , 0.166425904 , 0.167938295 , 0.169450291 , 0.170961889 , 0.172473084 , 0.173983873 , 0.175494253 , 0.17700422 , 0.178513771 , 0.180022901 , 0.181531608 , 0.183039888 , 0.184547737 , 0.186055152 , 0.187562129 , 0.189068664 , 0.190574755 , 0.192080397 , 0.193585587 , 0.195090322 , 0.196594598 , 0.198098411 , 0.199601758 , 0.201104635 , 0.202607039 , 0.204108966 , 0.205610413 , 0.207111376 , 0.208611852 , 0.210111837 , 0.211611327 , 0.21311032 , 0.214608811 , 0.216106797 , 0.217604275 , 0.21910124 , 0.22059769 , 0.222093621 , 0.223589029 , 0.225083911 , 0.226578264 , 0.228072083 , 0.229565366 , 0.231058108 , 0.232550307 , 0.234041959 , 0.235533059 , 0.237023606 , 0.238513595 , 0.240003022 , 0.241491885 , 0.24298018 , 0.244467903 , 0.24595505 , 0.247441619 , 0.248927606 , 0.250413007 , 0.251897818 , 0.253382037 , 0.25486566 , 0.256348682 , 0.257831102 , 0.259312915 , 0.260794118 , 0.262274707 , 0.263754679 , 0.26523403 , 0.266712757 , 0.268190857 , 0.269668326 , 0.27114516 , 0.272621355 , 0.27409691 , 0.275571819 , 0.27704608 , 0.278519689 , 0.279992643 , 0.281464938 , 0.28293657 , 0.284407537 , 0.285877835 , 0.28734746 , 0.288816408 , 0.290284677 , 0.291752263 , 0.293219163 , 0.294685372 , 0.296150888 , 0.297615707 , 0.299079826 , 0.300543241 , 0.302005949 , 0.303467947 , 0.30492923 , 0.306389795 , 0.30784964 , 0.30930876 , 0.310767153 , 0.312224814 , 0.31368174 , 0.315137929 , 0.316593376 , 0.318048077 , 0.319502031 , 0.320955232 , 0.322407679 , 0.323859367 , 0.325310292 , 0.326760452 , 0.328209844 , 0.329658463 , 0.331106306 , 0.33255337 , 0.333999651 , 0.335445147 , 0.336889853 , 0.338333767 , 0.339776884 , 0.341219202 , 0.342660717 , 0.344101426 , 0.345541325 , 0.346980411 , 0.34841868 , 0.34985613 , 0.351292756 , 0.352728556 , 0.354163525 , 0.355597662 , 0.357030961 , 0.358463421 , 0.359895037 , 0.361325806 , 0.362755724 , 0.36418479 , 0.365612998 , 0.367040346 , 0.36846683 , 0.369892447 , 0.371317194 , 0.372741067 , 0.374164063 , 0.375586178 , 0.37700741 , 0.378427755 , 0.379847209 , 0.381265769 , 0.382683432 , 0.384100195 , 0.385516054 , 0.386931006 , 0.388345047 , 0.389758174 , 0.391170384 , 0.392581674 , 0.39399204 , 0.395401479 , 0.396809987 , 0.398217562 , 0.3996242 , 0.401029897 , 0.402434651 , 0.403838458 , 0.405241314 , 0.406643217 , 0.408044163 , 0.409444149 , 0.410843171 , 0.412241227 , 0.413638312 , 0.415034424 , 0.41642956 , 0.417823716 , 0.419216888 , 0.420609074 , 0.422000271 , 0.423390474 , 0.424779681 , 0.426167889 , 0.427555093 , 0.428941292 , 0.430326481 , 0.431710658 , 0.433093819 , 0.434475961 , 0.43585708 , 0.437237174 , 0.438616239 , 0.439994271 , 0.441371269 , 0.442747228 , 0.444122145 , 0.445496017 , 0.44686884 , 0.448240612 , 0.44961133 , 0.450980989 , 0.452349587 , 0.453717121 , 0.455083587 , 0.456448982 , 0.457813304 , 0.459176548 , 0.460538711 , 0.461899791 , 0.463259784 , 0.464618686 , 0.465976496 , 0.467333209 , 0.468688822 , 0.470043332 , 0.471396737 , 0.472749032 , 0.474100215 , 0.475450282 , 0.47679923 , 0.478147056 , 0.479493758 , 0.480839331 , 0.482183772 , 0.483527079 , 0.484869248 , 0.486210276 , 0.48755016 , 0.488888897 , 0.490226483 , 0.491562916 , 0.492898192 , 0.494232309 , 0.495565262 , 0.496897049 , 0.498227667 , 0.499557113 , 0.500885383 , 0.502212474 , 0.503538384 , 0.504863109 , 0.506186645 , 0.507508991 , 0.508830143 , 0.510150097 , 0.51146885 , 0.512786401 , 0.514102744 , 0.515417878 , 0.516731799 , 0.518044504 , 0.51935599 , 0.520666254 , 0.521975293 , 0.523283103 , 0.524589683 , 0.525895027 , 0.527199135 , 0.528502002 , 0.529803625 , 0.531104001 , 0.532403128 , 0.533701002 , 0.53499762 , 0.536292979 , 0.537587076 , 0.538879909 , 0.540171473 , 0.541461766 , 0.542750785 , 0.544038527 , 0.545324988 , 0.546610167 , 0.547894059 , 0.549176662 , 0.550457973 , 0.551737988 , 0.553016706 , 0.554294121 , 0.555570233 , 0.556845037 , 0.558118531 , 0.559390712 , 0.560661576 , 0.561931121 , 0.563199344 , 0.564466242 , 0.565731811 , 0.566996049 , 0.568258953 , 0.569520519 , 0.570780746 , 0.572039629 , 0.573297167 , 0.574553355 , 0.575808191 , 0.577061673 , 0.578313796 , 0.579564559 , 0.580813958 , 0.58206199 , 0.583308653 , 0.584553943 , 0.585797857 , 0.587040394 , 0.588281548 , 0.589521319 , 0.590759702 , 0.591996695 , 0.593232295 , 0.594466499 , 0.595699304 , 0.596930708 , 0.598160707 , 0.599389298 , 0.600616479 , 0.601842247 , 0.603066599 , 0.604289531 , 0.605511041 , 0.606731127 , 0.607949785 , 0.609167012 , 0.610382806 , 0.611597164 , 0.612810082 , 0.614021559 , 0.615231591 , 0.616440175 , 0.617647308 , 0.618852988 , 0.620057212 , 0.621259977 , 0.622461279 , 0.623661118 , 0.624859488 , 0.626056388 , 0.627251815 , 0.628445767 , 0.629638239 , 0.63082923 , 0.632018736 , 0.633206755 , 0.634393284 , 0.63557832 , 0.636761861 , 0.637943904 , 0.639124445 , 0.640303482 , 0.641481013 , 0.642657034 , 0.643831543 , 0.645004537 , 0.646176013 , 0.647345969 , 0.648514401 , 0.649681307 , 0.650846685 , 0.652010531 , 0.653172843 , 0.654333618 , 0.655492853 , 0.656650546 , 0.657806693 , 0.658961293 , 0.660114342 , 0.661265838 , 0.662415778 , 0.663564159 , 0.664710978 , 0.665856234 , 0.666999922 , 0.668142041 , 0.669282588 , 0.67042156 , 0.671558955 , 0.672694769 , 0.673829 , 0.674961646 , 0.676092704 , 0.67722217 , 0.678350043 , 0.67947632 , 0.680600998 , 0.681724074 , 0.682845546 , 0.683965412 , 0.685083668 , 0.686200312 , 0.687315341 , 0.688428753 , 0.689540545 , 0.690650714 , 0.691759258 , 0.692866175 , 0.693971461 , 0.695075114 , 0.696177131 , 0.697277511 , 0.698376249 , 0.699473345 , 0.700568794 , 0.701662595 , 0.702754744 , 0.703845241 , 0.70493408 , 0.706021261 , 0.707106781 , 0.708190637 , 0.709272826 , 0.710353347 , 0.711432196 , 0.712509371 , 0.713584869 , 0.714658688 , 0.715730825 , 0.716801279 , 0.717870045 , 0.718937122 , 0.720002508 , 0.721066199 , 0.722128194 , 0.723188489 , 0.724247083 , 0.725303972 , 0.726359155 , 0.727412629 , 0.72846439 , 0.729514438 , 0.730562769 , 0.731609381 , 0.732654272 , 0.733697438 , 0.734738878 , 0.735778589 , 0.736816569 , 0.737852815 , 0.738887324 , 0.739920095 , 0.740951125 , 0.741980412 , 0.743007952 , 0.744033744 , 0.745057785 , 0.746080074 , 0.747100606 , 0.74811938 , 0.749136395 , 0.750151646 , 0.751165132 , 0.75217685 , 0.753186799 , 0.754194975 , 0.755201377 , 0.756206001 , 0.757208847 , 0.75820991 , 0.759209189 , 0.760206682 , 0.761202385 , 0.762196298 , 0.763188417 , 0.764178741 , 0.765167266 , 0.76615399 , 0.767138912 , 0.768122029 , 0.769103338 , 0.770082837 , 0.771060524 , 0.772036397 , 0.773010453 , 0.773982691 , 0.774953107 , 0.775921699 , 0.776888466 , 0.777853404 , 0.778816512 , 0.779777788 , 0.780737229 , 0.781694832 , 0.782650596 , 0.783604519 , 0.784556597 , 0.78550683 , 0.786455214 , 0.787401747 , 0.788346428 , 0.789289253 , 0.790230221 , 0.79116933 , 0.792106577 , 0.79304196 , 0.793975478 , 0.794907126 , 0.795836905 , 0.79676481 , 0.797690841 , 0.798614995 , 0.799537269 , 0.800457662 , 0.801376172 , 0.802292796 , 0.803207531 , 0.804120377 , 0.805031331 , 0.805940391 , 0.806847554 , 0.807752818 , 0.808656182 , 0.809557642 , 0.810457198 , 0.811354847 , 0.812250587 , 0.813144415 , 0.81403633 , 0.814926329 , 0.815814411 , 0.816700573 , 0.817584813 , 0.81846713 , 0.81934752 , 0.820225983 , 0.821102515 , 0.821977115 , 0.822849781 , 0.823720511 , 0.824589303 , 0.825456154 , 0.826321063 , 0.827184027 , 0.828045045 , 0.828904115 , 0.829761234 , 0.8306164 , 0.831469612 , 0.832320868 , 0.833170165 , 0.834017501 , 0.834862875 , 0.835706284 , 0.836547727 , 0.837387202 , 0.838224706 , 0.839060237 , 0.839893794 , 0.840725375 , 0.841554977 , 0.8423826 , 0.84320824 , 0.844031895 , 0.844853565 , 0.845673247 , 0.846490939 , 0.847306639 , 0.848120345 , 0.848932055 , 0.849741768 , 0.850549481 , 0.851355193 , 0.852158902 , 0.852960605 , 0.853760301 , 0.854557988 , 0.855353665 , 0.856147328 , 0.856938977 , 0.85772861 , 0.858516224 , 0.859301818 , 0.86008539 , 0.860866939 , 0.861646461 , 0.862423956 , 0.863199422 , 0.863972856 , 0.864744258 , 0.865513624 , 0.866280954 , 0.867046246 , 0.867809497 , 0.868570706 , 0.869329871 , 0.870086991 , 0.870842063 , 0.871595087 , 0.872346059 , 0.873094978 , 0.873841843 , 0.874586652 , 0.875329403 , 0.876070094 , 0.876808724 , 0.87754529 , 0.878279792 , 0.879012226 , 0.879742593 , 0.880470889 , 0.881197113 , 0.881921264 , 0.88264334 , 0.883363339 , 0.884081259 , 0.884797098 , 0.885510856 , 0.88622253 , 0.886932119 , 0.88763962 , 0.888345033 , 0.889048356 , 0.889749586 , 0.890448723 , 0.891145765 , 0.891840709 , 0.892533555 , 0.893224301 , 0.893912945 , 0.894599486 , 0.895283921 , 0.89596625 , 0.89664647 , 0.897324581 , 0.89800058 , 0.898674466 , 0.899346237 , 0.900015892 , 0.900683429 , 0.901348847 , 0.902012144 , 0.902673318 , 0.903332368 , 0.903989293 , 0.904644091 , 0.905296759 , 0.905947298 , 0.906595705 , 0.907241978 , 0.907886116 , 0.908528119 , 0.909167983 , 0.909805708 , 0.910441292 , 0.911074734 , 0.911706032 , 0.912335185 , 0.91296219 , 0.913587048 , 0.914209756 , 0.914830312 , 0.915448716 , 0.916064966 , 0.91667906 , 0.917290997 , 0.917900776 , 0.918508394 , 0.919113852 , 0.919717146 , 0.920318277 , 0.920917242 , 0.921514039 , 0.922108669 , 0.922701128 , 0.923291417 , 0.923879533 , 0.924465474 , 0.925049241 , 0.925630831 , 0.926210242 , 0.926787474 , 0.927362526 , 0.927935395 , 0.92850608 , 0.929074581 , 0.929640896 , 0.930205023 , 0.930766961 , 0.931326709 , 0.931884266 , 0.932439629 , 0.932992799 , 0.933543773 , 0.93409255 , 0.93463913 , 0.93518351 , 0.935725689 , 0.936265667 , 0.936803442 , 0.937339012 , 0.937872376 , 0.938403534 , 0.938932484 , 0.939459224 , 0.939983753 , 0.940506071 , 0.941026175 , 0.941544065 , 0.94205974 , 0.942573198 , 0.943084437 , 0.943593458 , 0.944100258 , 0.944604837 , 0.945107193 , 0.945607325 , 0.946105232 , 0.946600913 , 0.947094366 , 0.947585591 , 0.948074586 , 0.94856135 , 0.949045882 , 0.949528181 , 0.950008245 , 0.950486074 , 0.950961666 , 0.951435021 , 0.951906137 , 0.952375013 , 0.952841648 , 0.95330604 , 0.95376819 , 0.954228095 , 0.954685755 , 0.955141168 , 0.955594334 , 0.956045251 , 0.956493919 , 0.956940336 , 0.957384501 , 0.957826413 , 0.958266071 , 0.958703475 , 0.959138622 , 0.959571513 , 0.960002146 , 0.960430519 , 0.960856633 , 0.961280486 , 0.961702077 , 0.962121404 , 0.962538468 , 0.962953267 , 0.9633658 , 0.963776066 , 0.964184064 , 0.964589793 , 0.964993253 , 0.965394442 , 0.965793359 , 0.966190003 , 0.966584374 , 0.966976471 , 0.967366292 , 0.967753837 , 0.968139105 , 0.968522094 , 0.968902805 , 0.969281235 , 0.969657385 , 0.970031253 , 0.970402839 , 0.970772141 , 0.971139158 , 0.971503891 , 0.971866337 , 0.972226497 , 0.972584369 , 0.972939952 , 0.973293246 , 0.97364425 , 0.973992962 , 0.974339383 , 0.974683511 , 0.975025345 , 0.975364885 , 0.97570213 , 0.976037079 , 0.976369731 , 0.976700086 , 0.977028143 , 0.9773539 , 0.977677358 , 0.977998515 , 0.978317371 , 0.978633924 , 0.978948175 , 0.979260123 , 0.979569766 , 0.979877104 , 0.980182136 , 0.980484862 , 0.98078528 , 0.981083391 , 0.981379193 , 0.981672686 , 0.981963869 , 0.982252741 , 0.982539302 , 0.982823551 , 0.983105487 , 0.98338511 , 0.983662419 , 0.983937413 , 0.984210092 , 0.984480455 , 0.984748502 , 0.985014231 , 0.985277642 , 0.985538735 , 0.985797509 , 0.986053963 , 0.986308097 , 0.98655991 , 0.986809402 , 0.987056571 , 0.987301418 , 0.987543942 , 0.987784142 , 0.988022017 , 0.988257568 , 0.988490793 , 0.988721692 , 0.988950265 , 0.98917651 , 0.989400428 , 0.989622017 , 0.989841278 , 0.99005821 , 0.990272812 , 0.990485084 , 0.990695025 , 0.990902635 , 0.991107914 , 0.99131086 , 0.991511473 , 0.991709754 , 0.9919057 , 0.992099313 , 0.992290591 , 0.992479535 , 0.992666142 , 0.992850414 , 0.99303235 , 0.993211949 , 0.993389211 , 0.993564136 , 0.993736722 , 0.99390697 , 0.994074879 , 0.994240449 , 0.99440368 , 0.994564571 , 0.994723121 , 0.994879331 , 0.995033199 , 0.995184727 , 0.995333912 , 0.995480755 , 0.995625256 , 0.995767414 , 0.995907229 , 0.996044701 , 0.996179829 , 0.996312612 , 0.996443051 , 0.996571146 , 0.996696895 , 0.996820299 , 0.996941358 , 0.99706007 , 0.997176437 , 0.997290457 , 0.99740213 , 0.997511456 , 0.997618435 , 0.997723067 , 0.99782535 , 0.997925286 , 0.998022874 , 0.998118113 , 0.998211003 , 0.998301545 , 0.998389737 , 0.998475581 , 0.998559074 , 0.998640218 , 0.998719012 , 0.998795456 , 0.99886955 , 0.998941293 , 0.999010686 , 0.999077728 , 0.999142419 , 0.999204759 , 0.999264747 , 0.999322385 , 0.99937767 , 0.999430605 , 0.999481187 , 0.999529418 , 0.999575296 , 0.999618822 , 0.999659997 , 0.999698819 , 0.999735288 , 0.999769405 , 0.99980117 , 0.999830582 , 0.999857641 , 0.999882347 , 0.999904701 , 0.999924702 , 0.99994235 , 0.999957645 , 0.999970586 , 0.999981175 , 0.999989411 , 0.999995294 , 0.999998823 };

	const AP_17_4	_2pi		=	6.2831853;			//360 degrees
	const AP_17_4	pi  		=	3.1415926;			//180 degrees
	const AP_17_4	pi_2		=	1.5707963;			//90  degrees
	const AP_17_4	_3pi_4		=	4.7123889;			//270 degrees
	const AP_21_11	sin_conv  	= 	651.898647;			//1024.0f/(pi/2)f (0 to pi/2 radians)  |  to operate with degrees, change 1024/(pi/2) per 1024/90

	AP_21_11 theta=0.0;
	AP_21_11 aux;

	if (flag==1)
		theta=(pi_2 - theta_aux);		//cosine function (substacting 90 degrees of pi/2)
	else
		theta=theta_aux;				//sin function

	//restore theta format:
	if (theta>=_2pi)
		theta=theta-_2pi;
	if (theta<0)
		theta=theta+_2pi;

	//restore theta format:
	if (theta>=_2pi)
		theta=theta-_2pi;
	if (theta<0)
		theta=theta+_2pi;

	//0deg to 90deg
	if(0<=theta && theta<pi_2)
		aux = sin_func[(AP_11_11)(theta * sin_conv)];	//remove decimals to create vector index
	//90deg to 180deg
	else if(pi_2<=theta && theta<pi)
		aux =  sin_func[(AP_11_11)((pi-theta) * sin_conv)];
	//180deg to 270deg
	else if(pi<=theta && theta<_3pi_4)
		aux =   (-sin_func[(AP_11_11)((theta-pi) * sin_conv)]);
	//270deg to 360deg
	else if(_3pi_4<=theta && theta<_2pi)
		aux =   (-sin_func[(AP_11_11)((_2pi-theta) * sin_conv)]);

	else aux =  0.0f;

	return aux;

}


AP_18_2 calc_sin_cos (
		AP_21_11 theta_in, bool flag){

#pragma HLS PIPELINE
	//#pragma HLS INLINE

	const AP_18_2 sin_func[1024] = { 0.0 , 0.0015339 , 0.003067957 , 0.004601926 , 0.006135885 , 0.007669829 , 0.009203755 , 0.010737659 , 0.012271538 , 0.013805389 , 0.015339206 , 0.016872988 , 0.01840673 , 0.019940429 , 0.02147408 , 0.023007681 , 0.024541229 , 0.026074718 , 0.027608146 , 0.029141509 , 0.030674803 , 0.032208025 , 0.033741172 , 0.035274239 , 0.036807223 , 0.03834012 , 0.039872928 , 0.041405641 , 0.042938257 , 0.044470772 , 0.046003182 , 0.047535484 , 0.049067674 , 0.050599749 , 0.052131705 , 0.053663538 , 0.055195244 , 0.056726821 , 0.058258265 , 0.059789571 , 0.061320736 , 0.062851758 , 0.064382631 , 0.065913353 , 0.06744392 , 0.068974328 , 0.070504573 , 0.072034653 , 0.073564564 , 0.075094301 , 0.076623861 , 0.078153242 , 0.079682438 , 0.081211447 , 0.082740265 , 0.084268888 , 0.085797312 , 0.087325535 , 0.088853553 , 0.090381361 , 0.091908956 , 0.093436336 , 0.094963495 , 0.096490431 , 0.09801714 , 0.099543619 , 0.101069863 , 0.102595869 , 0.104121634 , 0.105647154 , 0.107172425 , 0.108697444 , 0.110222207 , 0.111746711 , 0.113270952 , 0.114794927 , 0.116318631 , 0.117842062 , 0.119365215 , 0.120888087 , 0.122410675 , 0.123932975 , 0.125454983 , 0.126976696 , 0.128498111 , 0.130019223 , 0.131540029 , 0.133060525 , 0.134580709 , 0.136100575 , 0.137620122 , 0.139139344 , 0.140658239 , 0.142176804 , 0.143695033 , 0.145212925 , 0.146730474 , 0.148247679 , 0.149764535 , 0.151281038 , 0.152797185 , 0.154312973 , 0.155828398 , 0.157343456 , 0.158858143 , 0.160372457 , 0.161886394 , 0.163399949 , 0.16491312 , 0.166425904 , 0.167938295 , 0.169450291 , 0.170961889 , 0.172473084 , 0.173983873 , 0.175494253 , 0.17700422 , 0.178513771 , 0.180022901 , 0.181531608 , 0.183039888 , 0.184547737 , 0.186055152 , 0.187562129 , 0.189068664 , 0.190574755 , 0.192080397 , 0.193585587 , 0.195090322 , 0.196594598 , 0.198098411 , 0.199601758 , 0.201104635 , 0.202607039 , 0.204108966 , 0.205610413 , 0.207111376 , 0.208611852 , 0.210111837 , 0.211611327 , 0.21311032 , 0.214608811 , 0.216106797 , 0.217604275 , 0.21910124 , 0.22059769 , 0.222093621 , 0.223589029 , 0.225083911 , 0.226578264 , 0.228072083 , 0.229565366 , 0.231058108 , 0.232550307 , 0.234041959 , 0.235533059 , 0.237023606 , 0.238513595 , 0.240003022 , 0.241491885 , 0.24298018 , 0.244467903 , 0.24595505 , 0.247441619 , 0.248927606 , 0.250413007 , 0.251897818 , 0.253382037 , 0.25486566 , 0.256348682 , 0.257831102 , 0.259312915 , 0.260794118 , 0.262274707 , 0.263754679 , 0.26523403 , 0.266712757 , 0.268190857 , 0.269668326 , 0.27114516 , 0.272621355 , 0.27409691 , 0.275571819 , 0.27704608 , 0.278519689 , 0.279992643 , 0.281464938 , 0.28293657 , 0.284407537 , 0.285877835 , 0.28734746 , 0.288816408 , 0.290284677 , 0.291752263 , 0.293219163 , 0.294685372 , 0.296150888 , 0.297615707 , 0.299079826 , 0.300543241 , 0.302005949 , 0.303467947 , 0.30492923 , 0.306389795 , 0.30784964 , 0.30930876 , 0.310767153 , 0.312224814 , 0.31368174 , 0.315137929 , 0.316593376 , 0.318048077 , 0.319502031 , 0.320955232 , 0.322407679 , 0.323859367 , 0.325310292 , 0.326760452 , 0.328209844 , 0.329658463 , 0.331106306 , 0.33255337 , 0.333999651 , 0.335445147 , 0.336889853 , 0.338333767 , 0.339776884 , 0.341219202 , 0.342660717 , 0.344101426 , 0.345541325 , 0.346980411 , 0.34841868 , 0.34985613 , 0.351292756 , 0.352728556 , 0.354163525 , 0.355597662 , 0.357030961 , 0.358463421 , 0.359895037 , 0.361325806 , 0.362755724 , 0.36418479 , 0.365612998 , 0.367040346 , 0.36846683 , 0.369892447 , 0.371317194 , 0.372741067 , 0.374164063 , 0.375586178 , 0.37700741 , 0.378427755 , 0.379847209 , 0.381265769 , 0.382683432 , 0.384100195 , 0.385516054 , 0.386931006 , 0.388345047 , 0.389758174 , 0.391170384 , 0.392581674 , 0.39399204 , 0.395401479 , 0.396809987 , 0.398217562 , 0.3996242 , 0.401029897 , 0.402434651 , 0.403838458 , 0.405241314 , 0.406643217 , 0.408044163 , 0.409444149 , 0.410843171 , 0.412241227 , 0.413638312 , 0.415034424 , 0.41642956 , 0.417823716 , 0.419216888 , 0.420609074 , 0.422000271 , 0.423390474 , 0.424779681 , 0.426167889 , 0.427555093 , 0.428941292 , 0.430326481 , 0.431710658 , 0.433093819 , 0.434475961 , 0.43585708 , 0.437237174 , 0.438616239 , 0.439994271 , 0.441371269 , 0.442747228 , 0.444122145 , 0.445496017 , 0.44686884 , 0.448240612 , 0.44961133 , 0.450980989 , 0.452349587 , 0.453717121 , 0.455083587 , 0.456448982 , 0.457813304 , 0.459176548 , 0.460538711 , 0.461899791 , 0.463259784 , 0.464618686 , 0.465976496 , 0.467333209 , 0.468688822 , 0.470043332 , 0.471396737 , 0.472749032 , 0.474100215 , 0.475450282 , 0.47679923 , 0.478147056 , 0.479493758 , 0.480839331 , 0.482183772 , 0.483527079 , 0.484869248 , 0.486210276 , 0.48755016 , 0.488888897 , 0.490226483 , 0.491562916 , 0.492898192 , 0.494232309 , 0.495565262 , 0.496897049 , 0.498227667 , 0.499557113 , 0.500885383 , 0.502212474 , 0.503538384 , 0.504863109 , 0.506186645 , 0.507508991 , 0.508830143 , 0.510150097 , 0.51146885 , 0.512786401 , 0.514102744 , 0.515417878 , 0.516731799 , 0.518044504 , 0.51935599 , 0.520666254 , 0.521975293 , 0.523283103 , 0.524589683 , 0.525895027 , 0.527199135 , 0.528502002 , 0.529803625 , 0.531104001 , 0.532403128 , 0.533701002 , 0.53499762 , 0.536292979 , 0.537587076 , 0.538879909 , 0.540171473 , 0.541461766 , 0.542750785 , 0.544038527 , 0.545324988 , 0.546610167 , 0.547894059 , 0.549176662 , 0.550457973 , 0.551737988 , 0.553016706 , 0.554294121 , 0.555570233 , 0.556845037 , 0.558118531 , 0.559390712 , 0.560661576 , 0.561931121 , 0.563199344 , 0.564466242 , 0.565731811 , 0.566996049 , 0.568258953 , 0.569520519 , 0.570780746 , 0.572039629 , 0.573297167 , 0.574553355 , 0.575808191 , 0.577061673 , 0.578313796 , 0.579564559 , 0.580813958 , 0.58206199 , 0.583308653 , 0.584553943 , 0.585797857 , 0.587040394 , 0.588281548 , 0.589521319 , 0.590759702 , 0.591996695 , 0.593232295 , 0.594466499 , 0.595699304 , 0.596930708 , 0.598160707 , 0.599389298 , 0.600616479 , 0.601842247 , 0.603066599 , 0.604289531 , 0.605511041 , 0.606731127 , 0.607949785 , 0.609167012 , 0.610382806 , 0.611597164 , 0.612810082 , 0.614021559 , 0.615231591 , 0.616440175 , 0.617647308 , 0.618852988 , 0.620057212 , 0.621259977 , 0.622461279 , 0.623661118 , 0.624859488 , 0.626056388 , 0.627251815 , 0.628445767 , 0.629638239 , 0.63082923 , 0.632018736 , 0.633206755 , 0.634393284 , 0.63557832 , 0.636761861 , 0.637943904 , 0.639124445 , 0.640303482 , 0.641481013 , 0.642657034 , 0.643831543 , 0.645004537 , 0.646176013 , 0.647345969 , 0.648514401 , 0.649681307 , 0.650846685 , 0.652010531 , 0.653172843 , 0.654333618 , 0.655492853 , 0.656650546 , 0.657806693 , 0.658961293 , 0.660114342 , 0.661265838 , 0.662415778 , 0.663564159 , 0.664710978 , 0.665856234 , 0.666999922 , 0.668142041 , 0.669282588 , 0.67042156 , 0.671558955 , 0.672694769 , 0.673829 , 0.674961646 , 0.676092704 , 0.67722217 , 0.678350043 , 0.67947632 , 0.680600998 , 0.681724074 , 0.682845546 , 0.683965412 , 0.685083668 , 0.686200312 , 0.687315341 , 0.688428753 , 0.689540545 , 0.690650714 , 0.691759258 , 0.692866175 , 0.693971461 , 0.695075114 , 0.696177131 , 0.697277511 , 0.698376249 , 0.699473345 , 0.700568794 , 0.701662595 , 0.702754744 , 0.703845241 , 0.70493408 , 0.706021261 , 0.707106781 , 0.708190637 , 0.709272826 , 0.710353347 , 0.711432196 , 0.712509371 , 0.713584869 , 0.714658688 , 0.715730825 , 0.716801279 , 0.717870045 , 0.718937122 , 0.720002508 , 0.721066199 , 0.722128194 , 0.723188489 , 0.724247083 , 0.725303972 , 0.726359155 , 0.727412629 , 0.72846439 , 0.729514438 , 0.730562769 , 0.731609381 , 0.732654272 , 0.733697438 , 0.734738878 , 0.735778589 , 0.736816569 , 0.737852815 , 0.738887324 , 0.739920095 , 0.740951125 , 0.741980412 , 0.743007952 , 0.744033744 , 0.745057785 , 0.746080074 , 0.747100606 , 0.74811938 , 0.749136395 , 0.750151646 , 0.751165132 , 0.75217685 , 0.753186799 , 0.754194975 , 0.755201377 , 0.756206001 , 0.757208847 , 0.75820991 , 0.759209189 , 0.760206682 , 0.761202385 , 0.762196298 , 0.763188417 , 0.764178741 , 0.765167266 , 0.76615399 , 0.767138912 , 0.768122029 , 0.769103338 , 0.770082837 , 0.771060524 , 0.772036397 , 0.773010453 , 0.773982691 , 0.774953107 , 0.775921699 , 0.776888466 , 0.777853404 , 0.778816512 , 0.779777788 , 0.780737229 , 0.781694832 , 0.782650596 , 0.783604519 , 0.784556597 , 0.78550683 , 0.786455214 , 0.787401747 , 0.788346428 , 0.789289253 , 0.790230221 , 0.79116933 , 0.792106577 , 0.79304196 , 0.793975478 , 0.794907126 , 0.795836905 , 0.79676481 , 0.797690841 , 0.798614995 , 0.799537269 , 0.800457662 , 0.801376172 , 0.802292796 , 0.803207531 , 0.804120377 , 0.805031331 , 0.805940391 , 0.806847554 , 0.807752818 , 0.808656182 , 0.809557642 , 0.810457198 , 0.811354847 , 0.812250587 , 0.813144415 , 0.81403633 , 0.814926329 , 0.815814411 , 0.816700573 , 0.817584813 , 0.81846713 , 0.81934752 , 0.820225983 , 0.821102515 , 0.821977115 , 0.822849781 , 0.823720511 , 0.824589303 , 0.825456154 , 0.826321063 , 0.827184027 , 0.828045045 , 0.828904115 , 0.829761234 , 0.8306164 , 0.831469612 , 0.832320868 , 0.833170165 , 0.834017501 , 0.834862875 , 0.835706284 , 0.836547727 , 0.837387202 , 0.838224706 , 0.839060237 , 0.839893794 , 0.840725375 , 0.841554977 , 0.8423826 , 0.84320824 , 0.844031895 , 0.844853565 , 0.845673247 , 0.846490939 , 0.847306639 , 0.848120345 , 0.848932055 , 0.849741768 , 0.850549481 , 0.851355193 , 0.852158902 , 0.852960605 , 0.853760301 , 0.854557988 , 0.855353665 , 0.856147328 , 0.856938977 , 0.85772861 , 0.858516224 , 0.859301818 , 0.86008539 , 0.860866939 , 0.861646461 , 0.862423956 , 0.863199422 , 0.863972856 , 0.864744258 , 0.865513624 , 0.866280954 , 0.867046246 , 0.867809497 , 0.868570706 , 0.869329871 , 0.870086991 , 0.870842063 , 0.871595087 , 0.872346059 , 0.873094978 , 0.873841843 , 0.874586652 , 0.875329403 , 0.876070094 , 0.876808724 , 0.87754529 , 0.878279792 , 0.879012226 , 0.879742593 , 0.880470889 , 0.881197113 , 0.881921264 , 0.88264334 , 0.883363339 , 0.884081259 , 0.884797098 , 0.885510856 , 0.88622253 , 0.886932119 , 0.88763962 , 0.888345033 , 0.889048356 , 0.889749586 , 0.890448723 , 0.891145765 , 0.891840709 , 0.892533555 , 0.893224301 , 0.893912945 , 0.894599486 , 0.895283921 , 0.89596625 , 0.89664647 , 0.897324581 , 0.89800058 , 0.898674466 , 0.899346237 , 0.900015892 , 0.900683429 , 0.901348847 , 0.902012144 , 0.902673318 , 0.903332368 , 0.903989293 , 0.904644091 , 0.905296759 , 0.905947298 , 0.906595705 , 0.907241978 , 0.907886116 , 0.908528119 , 0.909167983 , 0.909805708 , 0.910441292 , 0.911074734 , 0.911706032 , 0.912335185 , 0.91296219 , 0.913587048 , 0.914209756 , 0.914830312 , 0.915448716 , 0.916064966 , 0.91667906 , 0.917290997 , 0.917900776 , 0.918508394 , 0.919113852 , 0.919717146 , 0.920318277 , 0.920917242 , 0.921514039 , 0.922108669 , 0.922701128 , 0.923291417 , 0.923879533 , 0.924465474 , 0.925049241 , 0.925630831 , 0.926210242 , 0.926787474 , 0.927362526 , 0.927935395 , 0.92850608 , 0.929074581 , 0.929640896 , 0.930205023 , 0.930766961 , 0.931326709 , 0.931884266 , 0.932439629 , 0.932992799 , 0.933543773 , 0.93409255 , 0.93463913 , 0.93518351 , 0.935725689 , 0.936265667 , 0.936803442 , 0.937339012 , 0.937872376 , 0.938403534 , 0.938932484 , 0.939459224 , 0.939983753 , 0.940506071 , 0.941026175 , 0.941544065 , 0.94205974 , 0.942573198 , 0.943084437 , 0.943593458 , 0.944100258 , 0.944604837 , 0.945107193 , 0.945607325 , 0.946105232 , 0.946600913 , 0.947094366 , 0.947585591 , 0.948074586 , 0.94856135 , 0.949045882 , 0.949528181 , 0.950008245 , 0.950486074 , 0.950961666 , 0.951435021 , 0.951906137 , 0.952375013 , 0.952841648 , 0.95330604 , 0.95376819 , 0.954228095 , 0.954685755 , 0.955141168 , 0.955594334 , 0.956045251 , 0.956493919 , 0.956940336 , 0.957384501 , 0.957826413 , 0.958266071 , 0.958703475 , 0.959138622 , 0.959571513 , 0.960002146 , 0.960430519 , 0.960856633 , 0.961280486 , 0.961702077 , 0.962121404 , 0.962538468 , 0.962953267 , 0.9633658 , 0.963776066 , 0.964184064 , 0.964589793 , 0.964993253 , 0.965394442 , 0.965793359 , 0.966190003 , 0.966584374 , 0.966976471 , 0.967366292 , 0.967753837 , 0.968139105 , 0.968522094 , 0.968902805 , 0.969281235 , 0.969657385 , 0.970031253 , 0.970402839 , 0.970772141 , 0.971139158 , 0.971503891 , 0.971866337 , 0.972226497 , 0.972584369 , 0.972939952 , 0.973293246 , 0.97364425 , 0.973992962 , 0.974339383 , 0.974683511 , 0.975025345 , 0.975364885 , 0.97570213 , 0.976037079 , 0.976369731 , 0.976700086 , 0.977028143 , 0.9773539 , 0.977677358 , 0.977998515 , 0.978317371 , 0.978633924 , 0.978948175 , 0.979260123 , 0.979569766 , 0.979877104 , 0.980182136 , 0.980484862 , 0.98078528 , 0.981083391 , 0.981379193 , 0.981672686 , 0.981963869 , 0.982252741 , 0.982539302 , 0.982823551 , 0.983105487 , 0.98338511 , 0.983662419 , 0.983937413 , 0.984210092 , 0.984480455 , 0.984748502 , 0.985014231 , 0.985277642 , 0.985538735 , 0.985797509 , 0.986053963 , 0.986308097 , 0.98655991 , 0.986809402 , 0.987056571 , 0.987301418 , 0.987543942 , 0.987784142 , 0.988022017 , 0.988257568 , 0.988490793 , 0.988721692 , 0.988950265 , 0.98917651 , 0.989400428 , 0.989622017 , 0.989841278 , 0.99005821 , 0.990272812 , 0.990485084 , 0.990695025 , 0.990902635 , 0.991107914 , 0.99131086 , 0.991511473 , 0.991709754 , 0.9919057 , 0.992099313 , 0.992290591 , 0.992479535 , 0.992666142 , 0.992850414 , 0.99303235 , 0.993211949 , 0.993389211 , 0.993564136 , 0.993736722 , 0.99390697 , 0.994074879 , 0.994240449 , 0.99440368 , 0.994564571 , 0.994723121 , 0.994879331 , 0.995033199 , 0.995184727 , 0.995333912 , 0.995480755 , 0.995625256 , 0.995767414 , 0.995907229 , 0.996044701 , 0.996179829 , 0.996312612 , 0.996443051 , 0.996571146 , 0.996696895 , 0.996820299 , 0.996941358 , 0.99706007 , 0.997176437 , 0.997290457 , 0.99740213 , 0.997511456 , 0.997618435 , 0.997723067 , 0.99782535 , 0.997925286 , 0.998022874 , 0.998118113 , 0.998211003 , 0.998301545 , 0.998389737 , 0.998475581 , 0.998559074 , 0.998640218 , 0.998719012 , 0.998795456 , 0.99886955 , 0.998941293 , 0.999010686 , 0.999077728 , 0.999142419 , 0.999204759 , 0.999264747 , 0.999322385 , 0.99937767 , 0.999430605 , 0.999481187 , 0.999529418 , 0.999575296 , 0.999618822 , 0.999659997 , 0.999698819 , 0.999735288 , 0.999769405 , 0.99980117 , 0.999830582 , 0.999857641 , 0.999882347 , 0.999904701 , 0.999924702 , 0.99994235 , 0.999957645 , 0.999970586 , 0.999981175 , 0.999989411 , 0.999995294 , 0.999998823 };

	const AP_18_5	_4pi		=	6.2831853*2;			//2*360 degrees
	const AP_18_5	_2pi		=	6.2831853;			//360 degrees
	const AP_17_4	pi  		=	3.1415926;			//180 degrees
	const AP_17_4	pi_4		=	1.5707963;			//90  degrees
	const AP_17_4	_3pi_4		=	4.7123889;			//270 degrees
	const AP_21_11	sin_conv  	= 	651.898647;			//1024.0f/(pi/2)f (0 to pi/2 radians)  |  to operate with degrees, change 1024/(pi/2) per 1024/90
	//	const AP_18_11	sin_conv  	= 	651.898647;			//1024.0f/(pi/2)f (0 to pi/2 radians)  |  to operate with degrees, change 1024/(pi/2) per 1024/90

	AP_21_11 ret_val, val_table;
	AP_21_11 theta, theta1, theta2, theta3, theta_eff ;
	int index_table;

	if (flag==1){ //cosine
		if (theta_in >= (_2pi+pi_4))
			theta=(pi_4 + _4pi - theta_in);		//cosine function (substacting 90 degrees of pi/2)
		else if (theta_in >= pi_4)
			theta=(pi_4 + _2pi - theta_in);		//cosine function (substacting 90 degrees
		else if (theta_in < (-_4pi+pi_4))
			theta= (pi_4  - (_4pi + theta_in));
		else if (theta_in < (-_2pi+pi_4))
			theta=(pi_4 - (_2pi + theta_in)); //90-ang
		else theta=(pi_4 - theta_in);

	} else { //sine
		if (theta_in >=_4pi)
			theta=(theta_in - _4pi);
		else if (theta_in >= _2pi)
			theta=(theta_in - _2pi);
		else if (theta_in < -_2pi)
			theta=(_4pi + theta_in);
		else if (theta_in < 0)
			theta=(_2pi + theta_in);
		else theta= theta_in;
	}

	theta1= (pi - theta); //180 - ang
	theta2= theta - pi;  //ang - 180
	theta3=  _2pi - theta;  //360 - ang

	if (0<=theta && theta<pi_4)
		theta_eff = theta;
	else if (pi_4<=theta && theta<pi)
		theta_eff = theta1; //
	else if (pi<=theta && theta<_3pi_4)
		theta_eff = theta2;
	else theta_eff = theta3; //(_3pi_4<=theta && theta<_2pi)

	index_table = (int)(theta_eff * sin_conv);
	val_table = sin_func[index_table];

	//0deg to 180deg
	if (0 <= theta && theta < pi)
		ret_val = val_table;
	else if(pi <= theta && theta < _2pi)
		ret_val =  -val_table;
	else
		ret_val =  0.5; //catch the error

	return ret_val;

}

void abc_2_dqo_a(
		AP_24_14 a,  	AP_24_14 b,  	AP_24_14 c,
		AP_21_11 theta,
		AP_24_14 *d, 	AP_24_14 *q, 	AP_24_14 *o){

	const AP_17_4 	dos_terc 	= 0.6666666;
	const AP_3_1  	un_med   	= 0.50;
	const AP_17_4 _2pi_3   		= 2.0943951;

	*d =  dos_terc*( calc_sin_cos(theta,1)*a 	+ calc_sin_cos(theta-_2pi_3,1)*b	+ calc_sin_cos(theta+_2pi_3,1)*c);
	*q = -dos_terc*( calc_sin_cos(theta,0)*a 	+ calc_sin_cos(theta-_2pi_3,0)*b 	+ calc_sin_cos(theta+_2pi_3,0)*c);
	*o =  dos_terc*( un_med*a 					+ un_med*b 							+ un_med*c);

}

void abc_2_dqo(
		AP_24_14 a,  	AP_24_14 b,  	AP_24_14 c,
		AP_21_11 theta,
		AP_24_14 *d, 	AP_24_14 *q, 	AP_24_14 *o){

//#pragma HLS PIPELINE
#pragma HLS ALLOCATION instances=calc_sin_cos limit=1 function
#pragma HLS ALLOCATION instances=mul limit=1 operation
	//function haciendo explicitas las llamadas

	const AP_17_4 	dos_terc 	= 0.6666666;
	const AP_3_1  	un_med   	= 0.50;
	const AP_17_4 _2pi_3   		= 2.0943951;

	AP_18_2 cos_t1, cos_t2, cos_t3, sin_t1, sin_t2, sin_t3;

	cos_t1 = calc_sin_cos(theta,1);
	cos_t2 = calc_sin_cos(theta-_2pi_3,1);
	cos_t3 = calc_sin_cos(theta+_2pi_3,1);
	sin_t1 = calc_sin_cos(theta,0);
	sin_t2 = calc_sin_cos(theta-_2pi_3,0);
	sin_t3 = calc_sin_cos(theta+_2pi_3,0);

	*d =  dos_terc*( cos_t1*a + cos_t2*b + cos_t3*c);
	*q = -dos_terc*( sin_t1*a + sin_t2*b + sin_t3*c);
	*o =  dos_terc*( un_med*a + un_med*b + un_med*c);

}

void dqo_2_abc_a(
		AP_24_14 d,  AP_24_14 q, AP_24_14 o,
		AP_21_11 theta,
		AP_24_14 *a, AP_24_14 *b, AP_24_14 *c){

	const AP_17_4 	dos_terc 	= 0.6666666;
	const AP_17_4 _2pi_3   		= 2.0943951;

	*a = ( calc_sin_cos(theta,1)*d 			+ calc_sin_cos(theta,0)*q 			+ o);
	*b = ( calc_sin_cos(theta-_2pi_3,1)*d 	+ calc_sin_cos(theta-_2pi_3,0)*q 	+ o);
	*c = ( calc_sin_cos(theta+_2pi_3,1)*d 	+ calc_sin_cos(theta+_2pi_3,0)*q 	+ o);
}

void dqo_2_abc(
		AP_24_14 d,  AP_24_14 q, AP_24_14 o,
		AP_21_11 theta,
		AP_24_14 *a, AP_24_14 *b, AP_24_14 *c){

//#pragma HLS PIPELINE
#pragma HLS ALLOCATION instances=calc_sin_cos limit=1 function
#pragma HLS ALLOCATION instances=mul limit=1 operation
	//function haciendo explicitas las llamadas

	const AP_17_4 dos_terc 	= 0.6666666;
	const AP_3_1  un_med   	= 0.50;
	const AP_17_4 _2pi_3   	= 2.0943951;

	AP_18_2 cos_t1, cos_t2, cos_t3, sin_t1, sin_t2, sin_t3;

	cos_t1 = calc_sin_cos(theta,1);
	cos_t2 = calc_sin_cos(theta-_2pi_3,1);
	cos_t3 = calc_sin_cos(theta+_2pi_3,1);
	sin_t1 = calc_sin_cos(theta,0);
	sin_t2 = calc_sin_cos(theta-_2pi_3,0);
	sin_t3 = calc_sin_cos(theta+_2pi_3,0);

	*a = cos_t1*d + sin_t1*q + o;
	*b = cos_t2*d + sin_t2*q + o;
	*c = cos_t3*d + sin_t3*q + o;
}

AP_30_11 integrate (
		AP_18_11 in_act){

	//static AP_30_12 out_act=0.01, out_ant=0.01;
	static AP_30_11 out_act=0.0, out_ant=0.0;
	static AP_18_11 in_ant=0.0;
	const ap_fixed<30, 1, AP_RND_CONV, AP_SAT> 	dT   		= 0.0000015;	//	time_step
	const AP_3_1  								un_med   	= 0.5;
	const AP_17_4  								PI_2   		= 6.2831853; 	//2*pi

	out_act=(out_ant+(un_med*dT)*(in_act+in_ant));

	//reset the integral action
	if (out_act>= PI_2)
		out_act=0.0;

	if (out_act<= -PI_2)
		out_act=0.0;

	in_ant=in_act;
	out_ant=out_act;

	//printf ("\n%f", (float)out_act);

	return out_act;

}


AP_26_12 derivate_1 (
		AP_26_12 in_act){

	static AP_46_26 in_ant=0.0;
	AP_26_12 aux=0.0;
	const AP_29_18  dT_1 		= 666666.666666;	//	1/sime_step

	aux=(in_act - in_ant)*dT_1;

	in_ant = in_act;
	//printf ("\n%f", (float)aux);
	return aux;

}

AP_26_12 derivate_2 (
		AP_26_12 in_act){

	static AP_46_26 in_ant=0.0;
	AP_26_12 aux=0.0;
	const AP_29_18  dT_1 		= 666666.666666;	//	1/sime_step

	aux=(in_act - in_ant)*dT_1;

	in_ant = in_act;
	//printf ("\n%f", (float)aux);
	return aux;

}

void pmsm_2 (
		AP_24_14 Is_a, AP_24_14 Is_b, AP_24_14 Is_c,
		AP_17_7 Wn_o,
		AP_16_1 Ld, AP_16_1 Lq,	AP_16_1 Ls,// d and q axis inductance
		AP_15_4 landa_m,
		AP_8_8 Pole_pairs,
		AP_24_14 *Fem_a, AP_24_14 *Fem_b, AP_24_14 *Fem_c
){

	static AP_24_14 Is_d=0.0, Is_q=0.0, Is_o=0.0;
	static AP_26_12  d=0.0, q=0.0;
	static AP_24_14 Fem_d=0.0, Fem_q=0.0;
	static AP_30_11 theta_aux=0.0;
	static AP_18_11 W=0.0;
	static AP_26_12 Is_d_dif=0.0, Is_q_dif=0.0;
	static AP_24_14 Fem_a_aux=0.0, Fem_b_aux=0.0, Fem_c_aux=0.0;

	const AP_7_1 	tres_cuar 	= 0.750;		// = 3/4
	const AP_3_1  	un_med   	= 0.5;			// = 1/2
	const AP_24_14  cero   		= 0.0;			

	W = Wn_o*Pole_pairs;
	theta_aux = integrate(W);	//needs integration

	abc_2_dqo(Is_a, Is_b, Is_c, theta_aux, &Is_d, &Is_q, &Is_o);

	d = W*Is_q*(Lq-Ls);
	q = W*Is_d*(Ld-Ls) + landa_m*W;

	Is_d_dif = derivate_1(Is_d);	//needs derivative action
	Is_q_dif = derivate_2(Is_q);	//needs derivative action
	//previous sample should not be mixed between function calls. That is why two different derivative functions has been implemented

	Fem_d = Is_d_dif*(Ld-Ls)-d;
	Fem_q = Is_q_dif*(Lq-Ls)+q;

	dqo_2_abc(Fem_d, -Fem_q, cero, theta_aux, &Fem_a_aux, &Fem_b_aux, &Fem_c_aux);

	*Fem_a=Fem_a_aux;
	*Fem_b=Fem_b_aux;
	*Fem_c=Fem_c_aux;
}


void pmsm (
		AP_21_13 Vs_a, 		AP_21_13 Vs_b, 	AP_21_13 Vs_c,
		AP_21_13 VN_gnd,
		AP_21_13 Wn_o,
		bool K2,
		AP_16_1 Ld, AP_16_1 Lq, AP_16_1 Ls, AP_20_1 dT_Ls,
		bool SG1,
		AP_26_12 Rs,
		AP_15_4 landa_m,
		AP_8_8 Pole_pairs,
		AP_21_13 *Is_a, 	AP_21_13 *Is_b, AP_21_13 *Is_c,
		AP_21_13 *Fem_a_r, AP_21_13 *Fem_b_r, AP_21_13 *Fem_c_r){
#pragma HLS INTERFACE ap_none register port=Fem_b_r
#pragma HLS INTERFACE ap_none register port=Is_a
#pragma HLS INTERFACE ap_none register port=Is_c
#pragma HLS INTERFACE ap_none register port=Fem_a_r
#pragma HLS INTERFACE ap_none register port=Fem_c_r
#pragma HLS INTERFACE ap_none register port=Is_b

	static AP_24_14 Fem_a=0.0, Fem_b=0.0, Fem_c=0.0, iIs_a=0.0, iIs_b=0.0, iIs_c=0.0;
	static AP_15_3 A_iIs_a=0.0, A_iIs_b=0.0, A_iIs_c=0.0;
	static AP_26_12 Rss = 0.055;

	const AP_3_1  	un_med   	= 0.5;			// = 1/2

	//contactor logic
	if (SG1==1 && K2==1){
		Rss=Rs;
	}
	else {
		Rss=1000.0;	//1000ohm before
	}

	A_iIs_a = dT_Ls*(Fem_a+VN_gnd-Vs_a-iIs_a*Rss);
	A_iIs_b = dT_Ls*(Fem_b+VN_gnd-Vs_b-iIs_b*Rss);
	A_iIs_c = dT_Ls*(Fem_c+VN_gnd-Vs_c-iIs_c*Rss);

	iIs_a += A_iIs_a;
	iIs_b += A_iIs_b;
	iIs_c += A_iIs_c;

	pmsm_2(iIs_a, iIs_b, iIs_c, Wn_o, Ld, Lq, Ls, landa_m, Pole_pairs, &Fem_a, &Fem_b, &Fem_c);

	//Output:
	*Is_a = (AP_21_13)(iIs_a);
	*Is_b = (AP_21_13)(iIs_b);
	*Is_c = (AP_21_13)(iIs_c);

	*Fem_a_r=(AP_21_13)Fem_a;
	*Fem_b_r=(AP_21_13)Fem_b;
	*Fem_c_r=(AP_21_13)Fem_c;

}

